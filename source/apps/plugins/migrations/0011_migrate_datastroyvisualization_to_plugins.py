# Generated by Django 2.2 on 2021-01-26 21:53

from django.db import migrations
from fluent_contents.models import Placeholder, ContentItem
from apps.data_stories.models import NarrativeSection
from apps.plugins.models import DataStorySankey, DataStoryBarChart, DataStoryLineChart, DataStoryStackedBarChart, DataStoryDualAxisLineAndColumn, DataStoryMapChart, WysiwygBlockItem


class Migration(migrations.Migration):

    dependencies = [
        ('plugins', '0010_datastorybarchart_datastorydualaxislineandcolumn_datastorylinechart_datastorymapchart_datastorysanke'),
        ('data_stories', '0014_auto_20210202_1243')
    ]

    def migrate_data(apps, schema_editor):
        # Sankey
        order_number = 0
        for visualization in NarrativeSection.objects.exclude(data_story_id__isnull=True).exclude(sankey_id__isnull=True):
            try:
                placeholder = Placeholder.objects.get_by_slot(visualization.data_story, 'contents')
            except Placeholder.DoesNotExist:
                placeholder = Placeholder.objects.create_for_object(visualization.data_story, 'contents')

            WysiwygBlockItem.objects.create_for_placeholder(
                placeholder,
                title = visualization.title,
                content = visualization.description,
                sort_order = order_number + 1,
            )
            order_number += 1

            DataStorySankey.objects.create_for_placeholder(
                placeholder,
                title = visualization.title,
                sankey_id = visualization.sankey_id,
                sort_order=order_number + 1,
            )
            order_number += 1

        # Bar Chart
        for visualization in NarrativeSection.objects.exclude(data_story_id__isnull=True).exclude(bar_chart_id__isnull=True):
            try:
                placeholder = Placeholder.objects.get_by_slot(visualization.data_story, 'contents')
            except Placeholder.DoesNotExist:
                placeholder = Placeholder.objects.create_for_object(visualization.data_story, 'contents')

            WysiwygBlockItem.objects.create_for_placeholder(
                placeholder,
                title = visualization.title,
                content = visualization.description,
              sort_order=order_number + 1,
            )
            order_number += 1

            DataStoryBarChart.objects.create_for_placeholder(
                placeholder,
                title = visualization.title,
                bar_chart_id = visualization.bar_chart_id,
              sort_order=order_number + 1,
            )
            order_number += 1

        # Line Chart
        for visualization in NarrativeSection.objects.exclude(data_story_id__isnull=True).exclude(line_chart_id__isnull=True):
            try:
                placeholder = Placeholder.objects.get_by_slot(visualization.data_story, 'contents')
            except Placeholder.DoesNotExist:
                placeholder = Placeholder.objects.create_for_object(visualization.data_story, 'contents')

            WysiwygBlockItem.objects.create_for_placeholder(
                placeholder,
                title = visualization.title,
                content = visualization.description,
              sort_order=order_number + 1,
            )
            order_number += 1

            DataStoryLineChart.objects.create_for_placeholder(
                placeholder,
                title = visualization.title,
                line_chart_id = visualization.line_chart_id,
              sort_order=order_number + 1,
            )
            order_number += 1

        # Stacked Bar Chart
        for visualization in NarrativeSection.objects.exclude(data_story_id__isnull=True).exclude(stacked_bar_chart_id__isnull=True):
            try:
                placeholder = Placeholder.objects.get_by_slot(visualization.data_story, 'contents')
            except Placeholder.DoesNotExist:
                placeholder = Placeholder.objects.create_for_object(visualization.data_story, 'contents')

            WysiwygBlockItem.objects.create_for_placeholder(
                placeholder,
                title = visualization.title,
                content = visualization.description,
              sort_order=order_number + 1,
            )
            order_number += 1

            DataStoryStackedBarChart.objects.create_for_placeholder(
                placeholder,
                title = visualization.title,
                stacked_bar_chart_id = visualization.stacked_bar_chart_id,
              sort_order=order_number + 1,
            )
            order_number += 1

        # Dual Axis Line And Column
        for visualization in NarrativeSection.objects.exclude(data_story_id__isnull=True).exclude(dual_axis_line_and_column_id__isnull=True):
            try:
                placeholder = Placeholder.objects.get_by_slot(visualization.data_story, 'contents')
            except Placeholder.DoesNotExist:
                placeholder = Placeholder.objects.create_for_object(visualization.data_story, 'contents')

            WysiwygBlockItem.objects.create_for_placeholder(
                placeholder,
                title = visualization.title,
                content = visualization.description,
              sort_order=order_number + 1,
            )
            order_number += 1

            DataStoryDualAxisLineAndColumn.objects.create_for_placeholder(
                placeholder,
                title = visualization.title,
                dual_axis_line_and_column_id = visualization.dual_axis_line_and_column_id,
              sort_order=order_number + 1,
            )
            order_number += 1

        # Map Chart
        for visualization in NarrativeSection.objects.exclude(data_story_id__isnull=True).exclude(map_chart_id__isnull=True):
            try:
                placeholder = Placeholder.objects.get_by_slot(visualization.data_story, 'contents')
            except Placeholder.DoesNotExist:
                placeholder = Placeholder.objects.create_for_object(visualization.data_story, 'contents')

            WysiwygBlockItem.objects.create_for_placeholder(
                placeholder,
                title = visualization.title,
                content = visualization.description,
              sort_order=order_number + 1,
            )
            order_number += 1

            DataStoryMapChart.objects.create_for_placeholder(
                placeholder,
                title = visualization.title,
                map_chart_id = visualization.map_chart_id,
              sort_order=order_number + 1,
            )
            order_number += 1

    def reverse_migration(apps, schema_editor):
        for visualization in NarrativeSection.objects.exclude(data_story_id__isnull=True):
            content_items = ContentItem.objects.filter(parent_id=visualization.data_story_id)

            for content_item in content_items:
                object_name = content_item._meta.object_name
                if(
                    object_name == 'DataStorySankey'
                    or object_name == 'DataStoryBarChart'
                    or object_name == 'DataStoryLineChart'
                    or object_name == 'DataStoryStackedBarChart'
                    or object_name == 'DataStoryDualAxisLineAndColumn'
                    or object_name == 'DataStoryMapChart'
                    or object_name == 'WysiwygBlockItem'
                ):
                    content_item.delete()

    operations = [
        migrations.RunPython(migrate_data, reverse_migration),
    ]
