# Generated by Django 2.2 on 2021-02-01 17:52

from django.db import migrations
from django.conf import settings
from django.core.exceptions import ObjectDoesNotExist


def forwards_func(apps, schema_editor):
  DataStory = apps.get_model('data_stories', 'DataStory')
  DataStoryTranslation = apps.get_model('data_stories', 'DataStoryTranslation')
  for object in DataStory.objects.all():
    DataStoryTranslation.objects.create(
      master_id=object.pk,
      language_code=settings.LANGUAGE_CODE,
      _ttitle=object.title,
      _tdescription=object.description,
    )


def backwards_func(apps, schema_editor):
  DataStory = apps.get_model('data_stories', 'DataStory')
  DataStoryTranslation = apps.get_model('data_stories', 'DataStoryTranslation')
  for object in DataStory.objects.all():
    translation = _get_translation(object, DataStoryTranslation)
    object.title = translation._ttitle
    object.tdescription = translation._tdescription
    object.save()  # Note this only calls Model.save()


def _get_translation(object, DataStoryTranslation):
  translations = DataStoryTranslation.objects.filter(master_id=object.pk)
  try:
    # Try default translation
    return translations.get(language_code=settings.LANGUAGE_CODE)
  except ObjectDoesNotExist:
    try:
      # Try default language
      return translations.get(language_code=settings.PARLER_DEFAULT_LANGUAGE_CODE)
    except ObjectDoesNotExist:
      # Maybe the object was translated only in a specific language?
      # Hope there is a single translation
      return translations.get()


class Migration(migrations.Migration):

    dependencies = [
        ('data_stories', '0010_datastorytranslation__tdescription'),
    ]

    operations = [
      migrations.RunPython(forwards_func, backwards_func),
    ]
