# Generated by Django 2.2 on 2023-07-13 10:10

from django.db import migrations, models
import django.db.models.deletion
import parler.models
import smart_selects.db_fields


class Migration(migrations.Migration):

    dependencies = [
        ('programs', '0022_auto_20221129_1500'),
        ('common_metrics', '0023_commonmetricvisualization_scatter_chart'),
        ('visualizations', '0040_auto_20230712_1212'),
    ]

    operations = [
        migrations.CreateModel(
            name='DataStoryBoxplot',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True, verbose_name='Created at')),
                ('updated_at', models.DateTimeField(auto_now=True, db_index=True, verbose_name='Updated at')),
                ('title', models.CharField(max_length=255)),
                ('title_en', models.CharField(max_length=255, null=True)),
                ('title_ar', models.CharField(max_length=255, null=True)),
                ('title_bn', models.CharField(max_length=255, null=True)),
                ('title_fr', models.CharField(max_length=255, null=True)),
                ('title_es', models.CharField(max_length=255, null=True)),
                ('title_pl', models.CharField(max_length=255, null=True)),
                ('title_zh_hant', models.CharField(max_length=255, null=True)),
                ('title_ht', models.CharField(max_length=255, null=True)),
                ('title_ko', models.CharField(max_length=255, null=True)),
                ('title_ru', models.CharField(max_length=255, null=True)),
                ('title_ur', models.CharField(max_length=255, null=True)),
                ('short_title', models.CharField(blank=True, help_text='This title is required for the small card display and for the file name when data is exported', max_length=255)),
                ('short_title_en', models.CharField(blank=True, help_text='This title is required for the small card display and for the file name when data is exported', max_length=255, null=True)),
                ('short_title_ar', models.CharField(blank=True, help_text='This title is required for the small card display and for the file name when data is exported', max_length=255, null=True)),
                ('short_title_bn', models.CharField(blank=True, help_text='This title is required for the small card display and for the file name when data is exported', max_length=255, null=True)),
                ('short_title_fr', models.CharField(blank=True, help_text='This title is required for the small card display and for the file name when data is exported', max_length=255, null=True)),
                ('short_title_es', models.CharField(blank=True, help_text='This title is required for the small card display and for the file name when data is exported', max_length=255, null=True)),
                ('short_title_pl', models.CharField(blank=True, help_text='This title is required for the small card display and for the file name when data is exported', max_length=255, null=True)),
                ('short_title_zh_hant', models.CharField(blank=True, help_text='This title is required for the small card display and for the file name when data is exported', max_length=255, null=True)),
                ('short_title_ht', models.CharField(blank=True, help_text='This title is required for the small card display and for the file name when data is exported', max_length=255, null=True)),
                ('short_title_ko', models.CharField(blank=True, help_text='This title is required for the small card display and for the file name when data is exported', max_length=255, null=True)),
                ('short_title_ru', models.CharField(blank=True, help_text='This title is required for the small card display and for the file name when data is exported', max_length=255, null=True)),
                ('short_title_ur', models.CharField(blank=True, help_text='This title is required for the small card display and for the file name when data is exported', max_length=255, null=True)),
                ('description', models.TextField()),
                ('description_en', models.TextField(null=True)),
                ('description_ar', models.TextField(null=True)),
                ('description_bn', models.TextField(null=True)),
                ('description_fr', models.TextField(null=True)),
                ('description_es', models.TextField(null=True)),
                ('description_pl', models.TextField(null=True)),
                ('description_zh_hant', models.TextField(null=True)),
                ('description_ht', models.TextField(null=True)),
                ('description_ko', models.TextField(null=True)),
                ('description_ru', models.TextField(null=True)),
                ('description_ur', models.TextField(null=True)),
                ('data_notes', models.TextField(blank=True)),
                ('data_notes_en', models.TextField(blank=True, null=True)),
                ('data_notes_ar', models.TextField(blank=True, null=True)),
                ('data_notes_bn', models.TextField(blank=True, null=True)),
                ('data_notes_fr', models.TextField(blank=True, null=True)),
                ('data_notes_es', models.TextField(blank=True, null=True)),
                ('data_notes_pl', models.TextField(blank=True, null=True)),
                ('data_notes_zh_hant', models.TextField(blank=True, null=True)),
                ('data_notes_ht', models.TextField(blank=True, null=True)),
                ('data_notes_ko', models.TextField(blank=True, null=True)),
                ('data_notes_ru', models.TextField(blank=True, null=True)),
                ('data_notes_ur', models.TextField(blank=True, null=True)),
                ('x_axis_title', models.CharField(blank=True, max_length=255)),
                ('x_axis_title_en', models.CharField(blank=True, max_length=255, null=True)),
                ('x_axis_title_ar', models.CharField(blank=True, max_length=255, null=True)),
                ('x_axis_title_bn', models.CharField(blank=True, max_length=255, null=True)),
                ('x_axis_title_fr', models.CharField(blank=True, max_length=255, null=True)),
                ('x_axis_title_es', models.CharField(blank=True, max_length=255, null=True)),
                ('x_axis_title_pl', models.CharField(blank=True, max_length=255, null=True)),
                ('x_axis_title_zh_hant', models.CharField(blank=True, max_length=255, null=True)),
                ('x_axis_title_ht', models.CharField(blank=True, max_length=255, null=True)),
                ('x_axis_title_ko', models.CharField(blank=True, max_length=255, null=True)),
                ('x_axis_title_ru', models.CharField(blank=True, max_length=255, null=True)),
                ('x_axis_title_ur', models.CharField(blank=True, max_length=255, null=True)),
                ('y_axis_title', models.CharField(blank=True, max_length=255)),
                ('y_axis_title_en', models.CharField(blank=True, max_length=255, null=True)),
                ('y_axis_title_ar', models.CharField(blank=True, max_length=255, null=True)),
                ('y_axis_title_bn', models.CharField(blank=True, max_length=255, null=True)),
                ('y_axis_title_fr', models.CharField(blank=True, max_length=255, null=True)),
                ('y_axis_title_es', models.CharField(blank=True, max_length=255, null=True)),
                ('y_axis_title_pl', models.CharField(blank=True, max_length=255, null=True)),
                ('y_axis_title_zh_hant', models.CharField(blank=True, max_length=255, null=True)),
                ('y_axis_title_ht', models.CharField(blank=True, max_length=255, null=True)),
                ('y_axis_title_ko', models.CharField(blank=True, max_length=255, null=True)),
                ('y_axis_title_ru', models.CharField(blank=True, max_length=255, null=True)),
                ('y_axis_title_ur', models.CharField(blank=True, max_length=255, null=True)),
                ('decimal_points', models.IntegerField(default=0, help_text='The number of decimal points to be displayed on datapoints. This truncates rather than rounds. If set at 2 the value 20 will display as 20.00, the value 20.666 will display as 20.66, the value 20.6 will display as 20.60')),
                ('hide_tooltips', models.BooleanField(default=False)),
                ('hide_interactive_legend', models.BooleanField(default=False)),
                ('is_year', models.BooleanField(default=0, help_text='Controls the formatting of axis numbers. If checked axis numbers will not have commas.')),
                ('suffix', models.CharField(blank=True, max_length=255)),
                ('categories', models.TextField(blank=True, help_text='This should be a comma separated set of strings. For example: Under 16,16 to 19,20 to 24,25 to 54')),
                ('categories_en', models.TextField(blank=True, help_text='This should be a comma separated set of strings. For example: Under 16,16 to 19,20 to 24,25 to 54', null=True)),
                ('categories_ar', models.TextField(blank=True, help_text='This should be a comma separated set of strings. For example: Under 16,16 to 19,20 to 24,25 to 54', null=True)),
                ('categories_bn', models.TextField(blank=True, help_text='This should be a comma separated set of strings. For example: Under 16,16 to 19,20 to 24,25 to 54', null=True)),
                ('categories_fr', models.TextField(blank=True, help_text='This should be a comma separated set of strings. For example: Under 16,16 to 19,20 to 24,25 to 54', null=True)),
                ('categories_es', models.TextField(blank=True, help_text='This should be a comma separated set of strings. For example: Under 16,16 to 19,20 to 24,25 to 54', null=True)),
                ('categories_pl', models.TextField(blank=True, help_text='This should be a comma separated set of strings. For example: Under 16,16 to 19,20 to 24,25 to 54', null=True)),
                ('categories_zh_hant', models.TextField(blank=True, help_text='This should be a comma separated set of strings. For example: Under 16,16 to 19,20 to 24,25 to 54', null=True)),
                ('categories_ht', models.TextField(blank=True, help_text='This should be a comma separated set of strings. For example: Under 16,16 to 19,20 to 24,25 to 54', null=True)),
                ('categories_ko', models.TextField(blank=True, help_text='This should be a comma separated set of strings. For example: Under 16,16 to 19,20 to 24,25 to 54', null=True)),
                ('categories_ru', models.TextField(blank=True, help_text='This should be a comma separated set of strings. For example: Under 16,16 to 19,20 to 24,25 to 54', null=True)),
                ('categories_ur', models.TextField(blank=True, help_text='This should be a comma separated set of strings. For example: Under 16,16 to 19,20 to 24,25 to 54', null=True)),
            ],
            options={
                'verbose_name_plural': 'data stories boxplots',
            },
        ),
        migrations.AlterModelOptions(
            name='datastorylinechart',
            options={'verbose_name_plural': 'data stories line/area charts'},
        ),
        migrations.AlterModelOptions(
            name='linechart',
            options={'verbose_name_plural': 'line/area charts'},
        ),
        migrations.CreateModel(
            name='DataStoryBoxplotDataSet',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True, verbose_name='Created at')),
                ('updated_at', models.DateTimeField(auto_now=True, db_index=True, verbose_name='Updated at')),
                ('series_name', models.CharField(blank=True, help_text='If you have multiple overlaying series of boxplots, this label will distinguish them.', max_length=500)),
                ('series_name_en', models.CharField(blank=True, help_text='If you have multiple overlaying series of boxplots, this label will distinguish them.', max_length=500, null=True)),
                ('series_name_ar', models.CharField(blank=True, help_text='If you have multiple overlaying series of boxplots, this label will distinguish them.', max_length=500, null=True)),
                ('series_name_bn', models.CharField(blank=True, help_text='If you have multiple overlaying series of boxplots, this label will distinguish them.', max_length=500, null=True)),
                ('series_name_fr', models.CharField(blank=True, help_text='If you have multiple overlaying series of boxplots, this label will distinguish them.', max_length=500, null=True)),
                ('series_name_es', models.CharField(blank=True, help_text='If you have multiple overlaying series of boxplots, this label will distinguish them.', max_length=500, null=True)),
                ('series_name_pl', models.CharField(blank=True, help_text='If you have multiple overlaying series of boxplots, this label will distinguish them.', max_length=500, null=True)),
                ('series_name_zh_hant', models.CharField(blank=True, help_text='If you have multiple overlaying series of boxplots, this label will distinguish them.', max_length=500, null=True)),
                ('series_name_ht', models.CharField(blank=True, help_text='If you have multiple overlaying series of boxplots, this label will distinguish them.', max_length=500, null=True)),
                ('series_name_ko', models.CharField(blank=True, help_text='If you have multiple overlaying series of boxplots, this label will distinguish them.', max_length=500, null=True)),
                ('series_name_ru', models.CharField(blank=True, help_text='If you have multiple overlaying series of boxplots, this label will distinguish them.', max_length=500, null=True)),
                ('series_name_ur', models.CharField(blank=True, help_text='If you have multiple overlaying series of boxplots, this label will distinguish them.', max_length=500, null=True)),
                ('series_data', models.TextField(help_text='This should be a list of boxplots, comma-separated and surrounded by brackets. Each boxplot is itself a list of five values: low, q1, median, q3 and high. For example: [[0, 1, 2, 3, 4], [2, 3, 4, 5, 6]].')),
                ('boxplot', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='visualizations.DataStoryBoxplot')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Boxplot',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True, verbose_name='Created at')),
                ('updated_at', models.DateTimeField(auto_now=True, db_index=True, verbose_name='Updated at')),
                ('title', models.CharField(max_length=255)),
                ('title_en', models.CharField(max_length=255, null=True)),
                ('title_ar', models.CharField(max_length=255, null=True)),
                ('title_bn', models.CharField(max_length=255, null=True)),
                ('title_fr', models.CharField(max_length=255, null=True)),
                ('title_es', models.CharField(max_length=255, null=True)),
                ('title_pl', models.CharField(max_length=255, null=True)),
                ('title_zh_hant', models.CharField(max_length=255, null=True)),
                ('title_ht', models.CharField(max_length=255, null=True)),
                ('title_ko', models.CharField(max_length=255, null=True)),
                ('title_ru', models.CharField(max_length=255, null=True)),
                ('title_ur', models.CharField(max_length=255, null=True)),
                ('short_title', models.CharField(blank=True, help_text='This title is required for the small card display and for the file name when data is exported', max_length=255)),
                ('short_title_en', models.CharField(blank=True, help_text='This title is required for the small card display and for the file name when data is exported', max_length=255, null=True)),
                ('short_title_ar', models.CharField(blank=True, help_text='This title is required for the small card display and for the file name when data is exported', max_length=255, null=True)),
                ('short_title_bn', models.CharField(blank=True, help_text='This title is required for the small card display and for the file name when data is exported', max_length=255, null=True)),
                ('short_title_fr', models.CharField(blank=True, help_text='This title is required for the small card display and for the file name when data is exported', max_length=255, null=True)),
                ('short_title_es', models.CharField(blank=True, help_text='This title is required for the small card display and for the file name when data is exported', max_length=255, null=True)),
                ('short_title_pl', models.CharField(blank=True, help_text='This title is required for the small card display and for the file name when data is exported', max_length=255, null=True)),
                ('short_title_zh_hant', models.CharField(blank=True, help_text='This title is required for the small card display and for the file name when data is exported', max_length=255, null=True)),
                ('short_title_ht', models.CharField(blank=True, help_text='This title is required for the small card display and for the file name when data is exported', max_length=255, null=True)),
                ('short_title_ko', models.CharField(blank=True, help_text='This title is required for the small card display and for the file name when data is exported', max_length=255, null=True)),
                ('short_title_ru', models.CharField(blank=True, help_text='This title is required for the small card display and for the file name when data is exported', max_length=255, null=True)),
                ('short_title_ur', models.CharField(blank=True, help_text='This title is required for the small card display and for the file name when data is exported', max_length=255, null=True)),
                ('description', models.TextField()),
                ('description_en', models.TextField(null=True)),
                ('description_ar', models.TextField(null=True)),
                ('description_bn', models.TextField(null=True)),
                ('description_fr', models.TextField(null=True)),
                ('description_es', models.TextField(null=True)),
                ('description_pl', models.TextField(null=True)),
                ('description_zh_hant', models.TextField(null=True)),
                ('description_ht', models.TextField(null=True)),
                ('description_ko', models.TextField(null=True)),
                ('description_ru', models.TextField(null=True)),
                ('description_ur', models.TextField(null=True)),
                ('x_axis_title', models.CharField(blank=True, max_length=255)),
                ('x_axis_title_en', models.CharField(blank=True, max_length=255, null=True)),
                ('x_axis_title_ar', models.CharField(blank=True, max_length=255, null=True)),
                ('x_axis_title_bn', models.CharField(blank=True, max_length=255, null=True)),
                ('x_axis_title_fr', models.CharField(blank=True, max_length=255, null=True)),
                ('x_axis_title_es', models.CharField(blank=True, max_length=255, null=True)),
                ('x_axis_title_pl', models.CharField(blank=True, max_length=255, null=True)),
                ('x_axis_title_zh_hant', models.CharField(blank=True, max_length=255, null=True)),
                ('x_axis_title_ht', models.CharField(blank=True, max_length=255, null=True)),
                ('x_axis_title_ko', models.CharField(blank=True, max_length=255, null=True)),
                ('x_axis_title_ru', models.CharField(blank=True, max_length=255, null=True)),
                ('x_axis_title_ur', models.CharField(blank=True, max_length=255, null=True)),
                ('y_axis_title', models.CharField(blank=True, max_length=255)),
                ('y_axis_title_en', models.CharField(blank=True, max_length=255, null=True)),
                ('y_axis_title_ar', models.CharField(blank=True, max_length=255, null=True)),
                ('y_axis_title_bn', models.CharField(blank=True, max_length=255, null=True)),
                ('y_axis_title_fr', models.CharField(blank=True, max_length=255, null=True)),
                ('y_axis_title_es', models.CharField(blank=True, max_length=255, null=True)),
                ('y_axis_title_pl', models.CharField(blank=True, max_length=255, null=True)),
                ('y_axis_title_zh_hant', models.CharField(blank=True, max_length=255, null=True)),
                ('y_axis_title_ht', models.CharField(blank=True, max_length=255, null=True)),
                ('y_axis_title_ko', models.CharField(blank=True, max_length=255, null=True)),
                ('y_axis_title_ru', models.CharField(blank=True, max_length=255, null=True)),
                ('y_axis_title_ur', models.CharField(blank=True, max_length=255, null=True)),
                ('aggregate_by', models.CharField(choices=[('program', 'program'), ('agency', 'agency'), ('subgroup', 'subgroup')], max_length=255)),
                ('decimal_points', models.IntegerField(default=0, help_text='The number of decimal points to be displayed on datapoints. This truncates rather than rounds. If set at 2 the value 20 will display as 20.00, the value 20.666 will display as 20.66, the value 20.6 will display as 20.60')),
                ('hide_tooltips', models.BooleanField(default=False)),
                ('hide_interactive_legend', models.BooleanField(default=False)),
                ('is_year', models.BooleanField(default=False, help_text='Controls the formatting of axis numbers. If checked axis numbers will not have commas.')),
                ('suffix', models.CharField(blank=True, max_length=255)),
                ('agency', models.ManyToManyField(to='programs.Agency')),
                ('metric_category', models.ManyToManyField(blank=True, null=True, to='common_metrics.MetricCategory')),
                ('metric_name', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='common_metrics.MetricName')),
                ('metric_subgroup', smart_selects.db_fields.ChainedManyToManyField(blank=True, chained_field='metric_category', chained_model_field='metric_category', null=True, to='common_metrics.MetricCategorySubGroup')),
            ],
            options={
                'verbose_name_plural': 'boxplots',
            },
            bases=(parler.models.TranslatableModelMixin, models.Model),
        ),
    ]
