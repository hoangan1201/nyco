# Generated by Django 2.2 on 2021-01-20 23:04

from django.db import migrations
from django.conf import settings
from django.core.exceptions import ObjectDoesNotExist


def forwards_func(apps, schema_editor):
    CommonMetric = apps.get_model('common_metrics', 'CommonMetric')
    CommonMetricTranslation = apps.get_model('common_metrics', 'CommonMetricTranslation')
    for object in CommonMetric.objects.all():
        CommonMetricTranslation.objects.create(
            master_id=object.pk,
            language_code='en',
            ttitle=object.title,
            tdescription=object.description,
        )


def backwards_func(apps, schema_editor):
    CommonMetric = apps.get_model('common_metrics', 'CommonMetric')
    CommonMetricTranslation = apps.get_model('common_metrics', 'CommonMetricTranslation')
    for object in CommonMetric.objects.all():
        translation = _get_translation(object, CommonMetricTranslation)
        object.title = translation.ttitle
        object.tdescription = translation.tdescription
        object.save()  # Note this only calls Model.save()


def _get_translation(object, CommonMetricTranslation):
    translations = CommonMetricTranslation.objects.filter(master_id=object.pk)
    try:
        # Try default translation
        return translations.get(language_code=settings.LANGUAGE_CODE)
    except ObjectDoesNotExist:
        try:
            # Try default language
            return translations.get(language_code=settings.PARLER_DEFAULT_LANGUAGE_CODE)
        except ObjectDoesNotExist:
            # Maybe the object was translated only in a specific language?
            # Hope there is a single translation
            return translations.get()


class Migration(migrations.Migration):

    dependencies = [
      ('common_metrics', '0013_commonmetrictranslation'),
    ]

    operations = [
        migrations.RunPython(forwards_func, backwards_func),
    ]
